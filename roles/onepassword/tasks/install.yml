---
- name: Install 1password app
  apt:
    deb: "https://downloads.1password.com/linux/debian/amd64/stable/1password-latest.deb"
    state: present

- name: "Check onepassword CLI is installed"
  shell: "op --version | grep -qPe '^{{ op_version }}'"
  register: version_check
  ignore_errors: True
  changed_when: False

- name: "Check onepassword gpg key is imported"
  shell: "gpg --list-keys {{ op_pgp_key }} 2>/dev/null"
  register: gpg_key_check
  ignore_errors: True
  changed_when: False

- name: Install onepassword gpg-key
  command: "gpg --keyserver hkps://keyserver.ubuntu.com --recv-keys {{ op_pgp_key }}"
  when: version_check is failed and gpg_key_check is failed

- name: Download onepassword zip
  get_url:
    url: "https://cache.agilebits.com/dist/1P/op2/pkg/v{{ op_version }}/op_linux_amd64_v{{ op_version }}.zip"
    dest: "/tmp/op_{{ op_version }}.zip"
  when: version_check is failed

- name: Extract onepassword zip
  unarchive:
    remote_src: True
    src: "/tmp/op_{{ op_version }}.zip"
    dest: "/tmp/"
    owner: root
    group: root
    mode: 0755
  when: version_check is failed

- name: Verify the signature of onepassword CLI binary
  command: "gpg --verify /tmp/op.sig /tmp/op"
  when: version_check is failed

- name: Install onepassword
  shell: "mv op /usr/local/bin/op"
  args:
    chdir: "/tmp"
  when: version_check is failed

- name: Clean up
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/op.sig"
    - "/tmp/op_{{ op_version }}.zip"
  when: version_check is failed
